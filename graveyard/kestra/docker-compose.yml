services:
  kestra-postgres:
    container_name: kestra-postgres
    image: postgres
    restart: unless-stopped
    networks:
      - exist
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: ${KESTRA_PG_USERNAME}
      POSTGRES_PASSWORD: ${KESTRA_PG_PASSWORD}
    volumes:
      - kestra_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    container_name: kestra
    image: kestra/kestra:latest
    restart: unless-stopped
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    user: "root"
    command: server standalone
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: ${KESTRA_PG_USERNAME}
            password: ${KESTRA_PG_PASSWORD}
        kestra:
          server:
            basicAuth:
              username: ${KESTRA_USERNAME}
              password: ${KESTRA_PASSWORD}
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    networks:
      - exist
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      kestra-postgres:
        condition: service_healthy
    volumes:
      - kestra_data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd

volumes:
  kestra_postgres:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${TRUENAS_SERVER_ADDRESS},nolock,soft,rw,nfsvers=4"
      device: ":${TRUENAS_CONTAINER_PATH}/kestra_postgres"
  kestra_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${TRUENAS_SERVER_ADDRESS},nolock,soft,rw,nfsvers=4"
      device: ":${TRUENAS_CONTAINER_PATH}/kestra_data"

networks:
  exist:
    external: true
